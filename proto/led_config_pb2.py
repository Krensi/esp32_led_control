# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: led_config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='led_config.proto',
  package='ledconfig',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10led_config.proto\x12\tledconfig\"\xdc\x06\n\tLedConfig\x12.\n\x08segments\x18\x01 \x03(\x0b\x32\x1c.ledconfig.LedConfig.Segment\x1a\xe0\x01\n\x05\x43olor\x12\x11\n\tvalue_red\x18\x01 \x02(\r\x12\x13\n\x0bvalue_green\x18\x02 \x02(\r\x12\x12\n\nvalue_blue\x18\x03 \x02(\r\x12\x1c\n\x0etime_active_ms\x18\x04 \x01(\r:\x04\x31\x30\x30\x30\x12@\n\x0eswitching_mode\x18\x05 \x01(\x0e\x32(.ledconfig.LedConfig.Color.SwitchingMode\";\n\rSwitchingMode\x12\x08\n\x04JUMP\x10\x01\x12\x0f\n\x0bLINEAR_FADE\x10\x02\x12\x0f\n\x0bSMOOTH_FADE\x10\x03\x1a\xbb\x04\n\x07Segment\x12\x17\n\x0findex_led_start\x18\x01 \x02(\r\x12\x15\n\rindex_led_end\x18\x02 \x02(\r\x12\x39\n\x08standard\x18\x03 \x01(\x0b\x32%.ledconfig.LedConfig.Segment.StandardH\x00\x12@\n\x0cknight_rider\x18\x04 \x01(\x0b\x32(.ledconfig.LedConfig.Segment.KnightRiderH\x00\x12<\n\ncolor_wave\x18\x05 \x01(\x0b\x32&.ledconfig.LedConfig.Segment.ColorWaveH\x00\x1a:\n\x08Standard\x12.\n\ncolor_list\x18\x01 \x03(\x0b\x32\x1a.ledconfig.LedConfig.Color\x1a\x61\n\x0bKnightRider\x12.\n\ncolor_list\x18\x01 \x03(\x0b\x32\x1a.ledconfig.LedConfig.Color\x12\x13\n\x0bpulse_width\x18\x02 \x01(\r\x12\r\n\x05speed\x18\x03 \x01(\x02\x1a_\n\tColorWave\x12.\n\ncolor_list\x18\x01 \x03(\x0b\x32\x1a.ledconfig.LedConfig.Color\x12\x13\n\x0bpulse_width\x18\x02 \x01(\r\x12\r\n\x05speed\x18\x03 \x01(\x02\"=\n\x0bSegmentMode\x12\x0c\n\x08STANDARD\x10\x01\x12\x10\n\x0cKNIGHT_RIDER\x10\x02\x12\x0e\n\nCOLOR_WAVE\x10\x03\x42\x06\n\x04mode'
)



_LEDCONFIG_COLOR_SWITCHINGMODE = _descriptor.EnumDescriptor(
  name='SwitchingMode',
  full_name='ledconfig.LedConfig.Color.SwitchingMode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='JUMP', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LINEAR_FADE', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SMOOTH_FADE', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=259,
  serialized_end=318,
)
_sym_db.RegisterEnumDescriptor(_LEDCONFIG_COLOR_SWITCHINGMODE)

_LEDCONFIG_SEGMENT_SEGMENTMODE = _descriptor.EnumDescriptor(
  name='SegmentMode',
  full_name='ledconfig.LedConfig.Segment.SegmentMode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STANDARD', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KNIGHT_RIDER', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COLOR_WAVE', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=823,
  serialized_end=884,
)
_sym_db.RegisterEnumDescriptor(_LEDCONFIG_SEGMENT_SEGMENTMODE)


_LEDCONFIG_COLOR = _descriptor.Descriptor(
  name='Color',
  full_name='ledconfig.LedConfig.Color',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value_red', full_name='ledconfig.LedConfig.Color.value_red', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value_green', full_name='ledconfig.LedConfig.Color.value_green', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value_blue', full_name='ledconfig.LedConfig.Color.value_blue', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_active_ms', full_name='ledconfig.LedConfig.Color.time_active_ms', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='switching_mode', full_name='ledconfig.LedConfig.Color.switching_mode', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LEDCONFIG_COLOR_SWITCHINGMODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=94,
  serialized_end=318,
)

_LEDCONFIG_SEGMENT_STANDARD = _descriptor.Descriptor(
  name='Standard',
  full_name='ledconfig.LedConfig.Segment.Standard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='color_list', full_name='ledconfig.LedConfig.Segment.Standard.color_list', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=567,
  serialized_end=625,
)

_LEDCONFIG_SEGMENT_KNIGHTRIDER = _descriptor.Descriptor(
  name='KnightRider',
  full_name='ledconfig.LedConfig.Segment.KnightRider',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='color_list', full_name='ledconfig.LedConfig.Segment.KnightRider.color_list', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pulse_width', full_name='ledconfig.LedConfig.Segment.KnightRider.pulse_width', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='speed', full_name='ledconfig.LedConfig.Segment.KnightRider.speed', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=627,
  serialized_end=724,
)

_LEDCONFIG_SEGMENT_COLORWAVE = _descriptor.Descriptor(
  name='ColorWave',
  full_name='ledconfig.LedConfig.Segment.ColorWave',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='color_list', full_name='ledconfig.LedConfig.Segment.ColorWave.color_list', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pulse_width', full_name='ledconfig.LedConfig.Segment.ColorWave.pulse_width', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='speed', full_name='ledconfig.LedConfig.Segment.ColorWave.speed', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=726,
  serialized_end=821,
)

_LEDCONFIG_SEGMENT = _descriptor.Descriptor(
  name='Segment',
  full_name='ledconfig.LedConfig.Segment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='index_led_start', full_name='ledconfig.LedConfig.Segment.index_led_start', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='index_led_end', full_name='ledconfig.LedConfig.Segment.index_led_end', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='standard', full_name='ledconfig.LedConfig.Segment.standard', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='knight_rider', full_name='ledconfig.LedConfig.Segment.knight_rider', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='color_wave', full_name='ledconfig.LedConfig.Segment.color_wave', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LEDCONFIG_SEGMENT_STANDARD, _LEDCONFIG_SEGMENT_KNIGHTRIDER, _LEDCONFIG_SEGMENT_COLORWAVE, ],
  enum_types=[
    _LEDCONFIG_SEGMENT_SEGMENTMODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='mode', full_name='ledconfig.LedConfig.Segment.mode',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=321,
  serialized_end=892,
)

_LEDCONFIG = _descriptor.Descriptor(
  name='LedConfig',
  full_name='ledconfig.LedConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='segments', full_name='ledconfig.LedConfig.segments', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LEDCONFIG_COLOR, _LEDCONFIG_SEGMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=892,
)

_LEDCONFIG_COLOR.fields_by_name['switching_mode'].enum_type = _LEDCONFIG_COLOR_SWITCHINGMODE
_LEDCONFIG_COLOR.containing_type = _LEDCONFIG
_LEDCONFIG_COLOR_SWITCHINGMODE.containing_type = _LEDCONFIG_COLOR
_LEDCONFIG_SEGMENT_STANDARD.fields_by_name['color_list'].message_type = _LEDCONFIG_COLOR
_LEDCONFIG_SEGMENT_STANDARD.containing_type = _LEDCONFIG_SEGMENT
_LEDCONFIG_SEGMENT_KNIGHTRIDER.fields_by_name['color_list'].message_type = _LEDCONFIG_COLOR
_LEDCONFIG_SEGMENT_KNIGHTRIDER.containing_type = _LEDCONFIG_SEGMENT
_LEDCONFIG_SEGMENT_COLORWAVE.fields_by_name['color_list'].message_type = _LEDCONFIG_COLOR
_LEDCONFIG_SEGMENT_COLORWAVE.containing_type = _LEDCONFIG_SEGMENT
_LEDCONFIG_SEGMENT.fields_by_name['standard'].message_type = _LEDCONFIG_SEGMENT_STANDARD
_LEDCONFIG_SEGMENT.fields_by_name['knight_rider'].message_type = _LEDCONFIG_SEGMENT_KNIGHTRIDER
_LEDCONFIG_SEGMENT.fields_by_name['color_wave'].message_type = _LEDCONFIG_SEGMENT_COLORWAVE
_LEDCONFIG_SEGMENT.containing_type = _LEDCONFIG
_LEDCONFIG_SEGMENT_SEGMENTMODE.containing_type = _LEDCONFIG_SEGMENT
_LEDCONFIG_SEGMENT.oneofs_by_name['mode'].fields.append(
  _LEDCONFIG_SEGMENT.fields_by_name['standard'])
_LEDCONFIG_SEGMENT.fields_by_name['standard'].containing_oneof = _LEDCONFIG_SEGMENT.oneofs_by_name['mode']
_LEDCONFIG_SEGMENT.oneofs_by_name['mode'].fields.append(
  _LEDCONFIG_SEGMENT.fields_by_name['knight_rider'])
_LEDCONFIG_SEGMENT.fields_by_name['knight_rider'].containing_oneof = _LEDCONFIG_SEGMENT.oneofs_by_name['mode']
_LEDCONFIG_SEGMENT.oneofs_by_name['mode'].fields.append(
  _LEDCONFIG_SEGMENT.fields_by_name['color_wave'])
_LEDCONFIG_SEGMENT.fields_by_name['color_wave'].containing_oneof = _LEDCONFIG_SEGMENT.oneofs_by_name['mode']
_LEDCONFIG.fields_by_name['segments'].message_type = _LEDCONFIG_SEGMENT
DESCRIPTOR.message_types_by_name['LedConfig'] = _LEDCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LedConfig = _reflection.GeneratedProtocolMessageType('LedConfig', (_message.Message,), {

  'Color' : _reflection.GeneratedProtocolMessageType('Color', (_message.Message,), {
    'DESCRIPTOR' : _LEDCONFIG_COLOR,
    '__module__' : 'led_config_pb2'
    # @@protoc_insertion_point(class_scope:ledconfig.LedConfig.Color)
    })
  ,

  'Segment' : _reflection.GeneratedProtocolMessageType('Segment', (_message.Message,), {

    'Standard' : _reflection.GeneratedProtocolMessageType('Standard', (_message.Message,), {
      'DESCRIPTOR' : _LEDCONFIG_SEGMENT_STANDARD,
      '__module__' : 'led_config_pb2'
      # @@protoc_insertion_point(class_scope:ledconfig.LedConfig.Segment.Standard)
      })
    ,

    'KnightRider' : _reflection.GeneratedProtocolMessageType('KnightRider', (_message.Message,), {
      'DESCRIPTOR' : _LEDCONFIG_SEGMENT_KNIGHTRIDER,
      '__module__' : 'led_config_pb2'
      # @@protoc_insertion_point(class_scope:ledconfig.LedConfig.Segment.KnightRider)
      })
    ,

    'ColorWave' : _reflection.GeneratedProtocolMessageType('ColorWave', (_message.Message,), {
      'DESCRIPTOR' : _LEDCONFIG_SEGMENT_COLORWAVE,
      '__module__' : 'led_config_pb2'
      # @@protoc_insertion_point(class_scope:ledconfig.LedConfig.Segment.ColorWave)
      })
    ,
    'DESCRIPTOR' : _LEDCONFIG_SEGMENT,
    '__module__' : 'led_config_pb2'
    # @@protoc_insertion_point(class_scope:ledconfig.LedConfig.Segment)
    })
  ,
  'DESCRIPTOR' : _LEDCONFIG,
  '__module__' : 'led_config_pb2'
  # @@protoc_insertion_point(class_scope:ledconfig.LedConfig)
  })
_sym_db.RegisterMessage(LedConfig)
_sym_db.RegisterMessage(LedConfig.Color)
_sym_db.RegisterMessage(LedConfig.Segment)
_sym_db.RegisterMessage(LedConfig.Segment.Standard)
_sym_db.RegisterMessage(LedConfig.Segment.KnightRider)
_sym_db.RegisterMessage(LedConfig.Segment.ColorWave)


# @@protoc_insertion_point(module_scope)
